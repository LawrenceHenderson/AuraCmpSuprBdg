<aura:component access="global" controller="BoatSearchResults">
    <aura:attribute name="boats" type="Boat__c[]" />  
    <aura:attribute name="noboatsMsg" type="String" default =""/>
    <aura:attribute name="selectedBoatId" type="ID"/>

    <aura:attribute name="fld1" type="String"/>
    <aura:attribute name="fld2" type="String"/>
    <aura:attribute name="fld3" type="String"/>
    
     <!-- 
        Use <aura:method> to define a method as part of a component's API. 
        This enables you to directly call a method in a componentâ€™s client-side controller 
        instead of firing and handling a component event. 
        Using <aura:method> simplifies the code needed for a parent component to call a method on a 
        child component that it contains. 
-->
    <aura:method name="search" action="{!c.doSearch}" description="Retrieve Boats for display "> 
        <aura:attribute name="formData" type="Object"/> 
    </aura:method>

    <!--  BoatTile.onBoatClick() Fires BoatSelect Event -->
    <aura:handler name="boatId" event="c:BoatSelect" action="{!c.onBoatSelect}"/>
    <aura:handler name="render" value="{!this}" action="{!c.onRender}"/>
    
    <aura:if  isTrue="{! !empty(v.noboatsMsg)}">    
        <lightning:layout>           
            <lightning:layoutItem class="slds-align_absolute-center">
                <H1>No boats found</H1>
            </lightning:layoutItem>
        </lightning:layout>
    <aura:set attribute="else">    
        <!-- RESPONSIVE GRID EXAMPLE -->
        <lightning:layout multipleRows="true" class="slds-grid slds-wrap slds-grid--align-center ">
            <aura:iteration items="{!v.boats}" var="boat">
                <lightning:layoutItem class="slds-col slds-p-around_small slds-small-size_1-of-4 ">
                    <!-- <c:BoatTile boat="{#boat}" selected="{(!empty(v.selectedBoatId) and #boat.Id == v.selectedBoatId)? 'true': 'false'}" /> -->
                    <!-- <c:BoatTile boat="{#boat}" selected="{(#boat.Id == v.selectedBoatId)? 'true': 'false'}" /> -->
                    <c:BoatTile boat="{#boat}" selected="{#boat.Id != v.selectedBoatId? 'false': 'true'}" />
                    <!-- <c:BoatTile boat="{#boat}" /> -->
                    <!-- 
                    <c:TestOut fld1="{#boat.Id}" 
                               fld2="{!v.selectedBoatId}" 
                               fld3="{#boat.Id != v.selectedBoatId? 'false': 'true'}"
                               />
                     -->
                </lightning:layoutItem>
            </aura:iteration>
        </lightning:layout>
    </aura:set>
    </aura:if>          
</aura:component>